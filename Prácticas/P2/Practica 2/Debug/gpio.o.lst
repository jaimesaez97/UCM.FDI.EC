   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1710              		.align	2
 1711              		.global	portB_conf
 1713              	portB_conf:
 1714              	.LFB0:
   1:../gpio.c     **** /*		DUDAS:
   2:../gpio.c     **** 
   3:../gpio.c     ****  * 		1.- En portG_read() se lee el bit pin*2. En buttons.c, nos piden que
   4:../gpio.c     ****  * 		leamos el bit 6 y 7 del puerto G. ¿Cómo se hace si, según está,
   5:../gpio.c     ****  * 		solo se pueden leer bits pares? ¿O cambiamos la funcion portG_read()?
   6:../gpio.c     ****  *		2.- Preguntar por button.c/read_button()
   7:../gpio.c     ****  *		3.- En portG_eint_trig() hay que usar PIN o lo ponemos a capon?
   8:../gpio.c     ****  *		4.- this/portG_read() -> PIN O POS EN IF
   9:../gpio.c     ****  *
  10:../gpio.c     ****  *		COMPROBAR:
  11:../gpio.c     ****  *		1.-this/portG_read() -> val = high -> pulsado = no?
  12:../gpio.c     ****  *		3.-this/portG_conf_pup() -> ENABLE así o al revés?
  13:../gpio.c     ****  *
  14:../gpio.c     ****  */
  15:../gpio.c     **** #include "44b.h"
  16:../gpio.c     **** #include "gpio.h"
  17:../gpio.c     **** 
  18:../gpio.c     **** // puerto B
  19:../gpio.c     **** #define rPCONB (*(volatile unsigned *)0x1d20008)
  20:../gpio.c     **** #define rPDATB (*(volatile unsigned *)0x1d2000c)
  21:../gpio.c     **** // puerto G
  22:../gpio.c     **** #define rEXTINT (*(volatile unsigned *)0x1d20050)
  23:../gpio.c     **** #define rPDATG (*(volatile unsigned *)0x1d20044)
  24:../gpio.c     **** 
  25:../gpio.c     **** 
  26:../gpio.c     **** /* Port B interface implementation */
  27:../gpio.c     **** 
  28:../gpio.c     **** /*	Puerto B: 11 bits
  29:../gpio.c     ****  * 	 	-R.Datos 	: PDATB
  30:../gpio.c     ****  * 	 	-R.Control  : PCONB
  31:../gpio.c     ****  *
  32:../gpio.c     ****  * */
  33:../gpio.c     **** 
  34:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
  35:../gpio.c     **** {
 1715              		.loc 1 35 0
 1716              		.cfi_startproc
 1717              		@ Function supports interworking.
 1718              		@ args = 0, pretend = 0, frame = 16
 1719              		@ frame_needed = 1, uses_anonymous_args = 0
 1720 0000 0DC0A0E1 		mov	ip, sp
 1721              	.LCFI0:
 1722              		.cfi_def_cfa_register 12
 1723 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1724 0008 04B04CE2 		sub	fp, ip, #4
 1725              		.cfi_offset 14, -8
 1726              		.cfi_offset 13, -12
 1727              		.cfi_offset 11, -16
 1728              	.LCFI1:
 1729              		.cfi_def_cfa 11, 4
 1730 000c 10D04DE2 		sub	sp, sp, #16
 1731 0010 18000BE5 		str	r0, [fp, #-24]
 1732 0014 0130A0E1 		mov	r3, r1
 1733 0018 19304BE5 		strb	r3, [fp, #-25]
  36:../gpio.c     **** 	int ret = 0;
 1734              		.loc 1 36 0
 1735 001c 0030A0E3 		mov	r3, #0
 1736 0020 10300BE5 		str	r3, [fp, #-16]
  37:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1737              		.loc 1 37 0
 1738 0024 18301BE5 		ldr	r3, [fp, #-24]
 1739 0028 000053E3 		cmp	r3, #0
 1740 002c 020000BA 		blt	.L2
 1741              		.loc 1 37 0 is_stmt 0 discriminator 1
 1742 0030 18301BE5 		ldr	r3, [fp, #-24]
 1743 0034 0A0053E3 		cmp	r3, #10
 1744 0038 010000DA 		ble	.L3
 1745              	.L2:
  38:../gpio.c     **** 		return -1;
 1746              		.loc 1 38 0 is_stmt 1
 1747 003c 0030E0E3 		mvn	r3, #0
 1748 0040 1B0000EA 		b	.L4
 1749              	.L3:
  39:../gpio.c     **** 
  40:../gpio.c     **** 	if (mode == SIGOUT){
 1750              		.loc 1 40 0
 1751 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1752 0048 020053E3 		cmp	r3, #2
 1753 004c 0800001A 		bne	.L5
  41:../gpio.c     **** 		//COMPLETAR: Configurar el pin del puerto B
  42:../gpio.c     **** 		//para que salga la senal correspondiente del controlador de memoria
  43:../gpio.c     **** 		rPCONB |= (0x1 << pin); 	// pongo bit PIN a 1
 1754              		.loc 1 43 0
 1755 0050 6C309FE5 		ldr	r3, .L8
 1756 0054 68209FE5 		ldr	r2, .L8
 1757 0058 001092E5 		ldr	r1, [r2, #0]
 1758 005c 0100A0E3 		mov	r0, #1
 1759 0060 18201BE5 		ldr	r2, [fp, #-24]
 1760 0064 1022A0E1 		mov	r2, r0, asl r2
 1761 0068 022081E1 		orr	r2, r1, r2
 1762 006c 002083E5 		str	r2, [r3, #0]
 1763 0070 0E0000EA 		b	.L6
 1764              	.L5:
  44:../gpio.c     **** 	}
  45:../gpio.c     **** 	else if (mode == OUTPUT){
 1765              		.loc 1 45 0
 1766 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1767 0078 010053E3 		cmp	r3, #1
 1768 007c 0900001A 		bne	.L7
  46:../gpio.c     **** 		///COMPLETAR: Configurar el pin del puerto B
  47:../gpio.c     **** 		//para que sea de salida
  48:../gpio.c     **** 		rPCONB &= ~(0x1 << pin); //pongo bit PIN a 0
 1769              		.loc 1 48 0
 1770 0080 3C309FE5 		ldr	r3, .L8
 1771 0084 38209FE5 		ldr	r2, .L8
 1772 0088 001092E5 		ldr	r1, [r2, #0]
 1773 008c 0100A0E3 		mov	r0, #1
 1774 0090 18201BE5 		ldr	r2, [fp, #-24]
 1775 0094 1022A0E1 		mov	r2, r0, asl r2
 1776 0098 0220E0E1 		mvn	r2, r2
 1777 009c 022001E0 		and	r2, r1, r2
 1778 00a0 002083E5 		str	r2, [r3, #0]
 1779 00a4 010000EA 		b	.L6
 1780              	.L7:
  49:../gpio.c     **** 	}
  50:../gpio.c     **** 	else
  51:../gpio.c     **** 		ret = -1;
 1781              		.loc 1 51 0
 1782 00a8 0030E0E3 		mvn	r3, #0
 1783 00ac 10300BE5 		str	r3, [fp, #-16]
 1784              	.L6:
  52:../gpio.c     **** 
  53:../gpio.c     **** 	return ret;
 1785              		.loc 1 53 0
 1786 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1787              	.L4:
  54:../gpio.c     **** }
 1788              		.loc 1 54 0
 1789 00b4 0300A0E1 		mov	r0, r3
 1790 00b8 0CD04BE2 		sub	sp, fp, #12
 1791 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1792 00c0 1EFF2FE1 		bx	lr
 1793              	.L9:
 1794              		.align	2
 1795              	.L8:
 1796 00c4 0800D201 		.word	30539784
 1797              		.cfi_endproc
 1798              	.LFE0:
 1800              		.align	2
 1801              		.global	portB_write
 1803              	portB_write:
 1804              	.LFB1:
  55:../gpio.c     **** 
  56:../gpio.c     **** int portB_write(int pin, enum digital val)
  57:../gpio.c     **** {
 1805              		.loc 1 57 0
 1806              		.cfi_startproc
 1807              		@ Function supports interworking.
 1808              		@ args = 0, pretend = 0, frame = 8
 1809              		@ frame_needed = 1, uses_anonymous_args = 0
 1810 00c8 0DC0A0E1 		mov	ip, sp
 1811              	.LCFI2:
 1812              		.cfi_def_cfa_register 12
 1813 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1814 00d0 04B04CE2 		sub	fp, ip, #4
 1815              		.cfi_offset 14, -8
 1816              		.cfi_offset 13, -12
 1817              		.cfi_offset 11, -16
 1818              	.LCFI3:
 1819              		.cfi_def_cfa 11, 4
 1820 00d4 08D04DE2 		sub	sp, sp, #8
 1821 00d8 10000BE5 		str	r0, [fp, #-16]
 1822 00dc 0130A0E1 		mov	r3, r1
 1823 00e0 11304BE5 		strb	r3, [fp, #-17]
  58:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1824              		.loc 1 58 0
 1825 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1826 00e8 000053E3 		cmp	r3, #0
 1827 00ec 020000BA 		blt	.L11
 1828              		.loc 1 58 0 is_stmt 0 discriminator 1
 1829 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1830 00f4 0A0053E3 		cmp	r3, #10
 1831 00f8 010000DA 		ble	.L12
 1832              	.L11:
  59:../gpio.c     **** 		return -1;
 1833              		.loc 1 59 0 is_stmt 1
 1834 00fc 0030E0E3 		mvn	r3, #0
 1835 0100 1A0000EA 		b	.L13
 1836              	.L12:
  60:../gpio.c     **** 
  61:../gpio.c     **** 	if (val < 0 || val > 1)
 1837              		.loc 1 61 0
 1838 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1839 0108 010053E3 		cmp	r3, #1
 1840 010c 0100009A 		bls	.L14
  62:../gpio.c     **** 		return -1;
 1841              		.loc 1 62 0
 1842 0110 0030E0E3 		mvn	r3, #0
 1843 0114 150000EA 		b	.L13
 1844              	.L14:
  63:../gpio.c     **** 
  64:../gpio.c     **** 	if (val){
 1845              		.loc 1 64 0
 1846 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1847 011c 000053E3 		cmp	r3, #0
 1848 0120 0800000A 		beq	.L15
  65:../gpio.c     **** 		//COMPLETAR: poner en el pin del puerto B
  66:../gpio.c     **** 		//el valor adecuado para que el led se apague(1)
  67:../gpio.c     **** 		rPDATB |= (0x1 << pin);	// pongo bit PIN a 1
 1849              		.loc 1 67 0
 1850 0124 54309FE5 		ldr	r3, .L17
 1851 0128 50209FE5 		ldr	r2, .L17
 1852 012c 001092E5 		ldr	r1, [r2, #0]
 1853 0130 0100A0E3 		mov	r0, #1
 1854 0134 10201BE5 		ldr	r2, [fp, #-16]
 1855 0138 1022A0E1 		mov	r2, r0, asl r2
 1856 013c 022081E1 		orr	r2, r1, r2
 1857 0140 002083E5 		str	r2, [r3, #0]
 1858 0144 080000EA 		b	.L16
 1859              	.L15:
  68:../gpio.c     **** 
  69:../gpio.c     **** 	}
  70:../gpio.c     **** 	else{
  71:../gpio.c     **** 
  72:../gpio.c     **** 		//COMPLETAR: poner en el pin del puerto B
  73:../gpio.c     **** 		//el valor adecuado para que el led se encienda(0)
  74:../gpio.c     **** 		rPDATB &= ~(0x1 << pin);	// pongo bit PIN a 0
 1860              		.loc 1 74 0
 1861 0148 30309FE5 		ldr	r3, .L17
 1862 014c 2C209FE5 		ldr	r2, .L17
 1863 0150 001092E5 		ldr	r1, [r2, #0]
 1864 0154 0100A0E3 		mov	r0, #1
 1865 0158 10201BE5 		ldr	r2, [fp, #-16]
 1866 015c 1022A0E1 		mov	r2, r0, asl r2
 1867 0160 0220E0E1 		mvn	r2, r2
 1868 0164 022001E0 		and	r2, r1, r2
 1869 0168 002083E5 		str	r2, [r3, #0]
 1870              	.L16:
  75:../gpio.c     **** 
  76:../gpio.c     **** 	}
  77:../gpio.c     **** 	return 0;
 1871              		.loc 1 77 0
 1872 016c 0030A0E3 		mov	r3, #0
 1873              	.L13:
  78:../gpio.c     **** }
 1874              		.loc 1 78 0
 1875 0170 0300A0E1 		mov	r0, r3
 1876 0174 0CD04BE2 		sub	sp, fp, #12
 1877 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1878 017c 1EFF2FE1 		bx	lr
 1879              	.L18:
 1880              		.align	2
 1881              	.L17:
 1882 0180 0C00D201 		.word	30539788
 1883              		.cfi_endproc
 1884              	.LFE1:
 1886              		.align	2
 1887              		.global	portG_conf
 1889              	portG_conf:
 1890              	.LFB2:
  79:../gpio.c     **** 
  80:../gpio.c     **** /* Port G interface implementation */
  81:../gpio.c     **** 
  82:../gpio.c     **** /*
  83:../gpio.c     ****  * 	Puerto G (bits 15-0):
  84:../gpio.c     ****  * 		-PDATG: 1 pulsado, 0 no.
  85:../gpio.c     ****  * 		-PUPG:  Permite activar 1 resistencia por cada pin
  86:../gpio.c     ****  * 		-PCONG: Permite configurar pines:
  87:../gpio.c     ****  * 			+ 00 -> pin = entrada
  88:../gpio.c     ****  * 			+ 11 -> activar interrupcion
  89:../gpio.c     ****  * 			+ ¿salida?
  90:../gpio.c     ****  * */
  91:../gpio.c     **** 
  92:../gpio.c     **** 
  93:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  94:../gpio.c     **** {
 1891              		.loc 1 94 0
 1892              		.cfi_startproc
 1893              		@ Function supports interworking.
 1894              		@ args = 0, pretend = 0, frame = 16
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896 0184 0DC0A0E1 		mov	ip, sp
 1897              	.LCFI4:
 1898              		.cfi_def_cfa_register 12
 1899 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1900 018c 04B04CE2 		sub	fp, ip, #4
 1901              		.cfi_offset 14, -8
 1902              		.cfi_offset 13, -12
 1903              		.cfi_offset 11, -16
 1904              	.LCFI5:
 1905              		.cfi_def_cfa 11, 4
 1906 0190 10D04DE2 		sub	sp, sp, #16
 1907 0194 18000BE5 		str	r0, [fp, #-24]
 1908 0198 0130A0E1 		mov	r3, r1
 1909 019c 19304BE5 		strb	r3, [fp, #-25]
  95:../gpio.c     **** 	//La variable pos indica el primer bit del registro de control del puerto G que corresponde al pin
  96:../gpio.c     **** 	int pos = pin*2;
 1910              		.loc 1 96 0
 1911 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1912 01a4 8330A0E1 		mov	r3, r3, asl #1
 1913 01a8 10300BE5 		str	r3, [fp, #-16]
  97:../gpio.c     **** 
  98:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1914              		.loc 1 98 0
 1915 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1916 01b0 000053E3 		cmp	r3, #0
 1917 01b4 020000BA 		blt	.L20
 1918              		.loc 1 98 0 is_stmt 0 discriminator 1
 1919 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1920 01bc 070053E3 		cmp	r3, #7
 1921 01c0 010000DA 		ble	.L21
 1922              	.L20:
  99:../gpio.c     **** 		return -1;
 1923              		.loc 1 99 0 is_stmt 1
 1924 01c4 0030E0E3 		mvn	r3, #0
 1925 01c8 410000EA 		b	.L22
 1926              	.L21:
 100:../gpio.c     **** 
 101:../gpio.c     **** 	switch (mode) {
 1927              		.loc 1 101 0
 1928 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1929 01d0 030053E3 		cmp	r3, #3
 1930 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1931 01d8 3A0000EA 		b	.L23
 1932              	.L28:
 1933 01dc EC010000 		.word	.L24
 1934 01e0 14020000 		.word	.L25
 1935 01e4 5C020000 		.word	.L26
 1936 01e8 A4020000 		.word	.L27
 1937              	.L24:
 102:../gpio.c     **** 		case INPUT:	//00
 103:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
 104:../gpio.c     **** 			//para que sea de entrada
 105:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);	// pongo 00
 1938              		.loc 1 105 0
 1939 01ec F0309FE5 		ldr	r3, .L30
 1940 01f0 EC209FE5 		ldr	r2, .L30
 1941 01f4 001092E5 		ldr	r1, [r2, #0]
 1942 01f8 0300A0E3 		mov	r0, #3
 1943 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1944 0200 1022A0E1 		mov	r2, r0, asl r2
 1945 0204 0220E0E1 		mvn	r2, r2
 1946 0208 022001E0 		and	r2, r1, r2
 1947 020c 002083E5 		str	r2, [r3, #0]
 106:../gpio.c     **** 			break;
 1948              		.loc 1 106 0
 1949 0210 2E0000EA 		b	.L29
 1950              	.L25:
 107:../gpio.c     **** 		case OUTPUT: //01
 108:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
 109:../gpio.c     **** 			//para que sea de salida
 110:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);	// pongo 00
 1951              		.loc 1 110 0
 1952 0214 C8309FE5 		ldr	r3, .L30
 1953 0218 C4209FE5 		ldr	r2, .L30
 1954 021c 001092E5 		ldr	r1, [r2, #0]
 1955 0220 0300A0E3 		mov	r0, #3
 1956 0224 10201BE5 		ldr	r2, [fp, #-16]
 1957 0228 1022A0E1 		mov	r2, r0, asl r2
 1958 022c 0220E0E1 		mvn	r2, r2
 1959 0230 022001E0 		and	r2, r1, r2
 1960 0234 002083E5 		str	r2, [r3, #0]
 111:../gpio.c     **** 			rPCONG |= (0x1 << pos);		// pongo 01
 1961              		.loc 1 111 0
 1962 0238 A4309FE5 		ldr	r3, .L30
 1963 023c A0209FE5 		ldr	r2, .L30
 1964 0240 001092E5 		ldr	r1, [r2, #0]
 1965 0244 0100A0E3 		mov	r0, #1
 1966 0248 10201BE5 		ldr	r2, [fp, #-16]
 1967 024c 1022A0E1 		mov	r2, r0, asl r2
 1968 0250 022081E1 		orr	r2, r1, r2
 1969 0254 002083E5 		str	r2, [r3, #0]
 112:../gpio.c     **** 
 113:../gpio.c     **** 			break;
 1970              		.loc 1 113 0
 1971 0258 1C0000EA 		b	.L29
 1972              	.L26:
 114:../gpio.c     **** 		case SIGOUT: //10
 115:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
 116:../gpio.c     **** 			//para que salga la señal interna correspondiente
 117:../gpio.c     **** 			rPCONG &= ~(0x3 << pos);	// pongo 00
 1973              		.loc 1 117 0
 1974 025c 80309FE5 		ldr	r3, .L30
 1975 0260 7C209FE5 		ldr	r2, .L30
 1976 0264 001092E5 		ldr	r1, [r2, #0]
 1977 0268 0300A0E3 		mov	r0, #3
 1978 026c 10201BE5 		ldr	r2, [fp, #-16]
 1979 0270 1022A0E1 		mov	r2, r0, asl r2
 1980 0274 0220E0E1 		mvn	r2, r2
 1981 0278 022001E0 		and	r2, r1, r2
 1982 027c 002083E5 		str	r2, [r3, #0]
 118:../gpio.c     **** 			rPCONG |= (0x2 << pos);		// pongo 10
 1983              		.loc 1 118 0
 1984 0280 5C309FE5 		ldr	r3, .L30
 1985 0284 58209FE5 		ldr	r2, .L30
 1986 0288 001092E5 		ldr	r1, [r2, #0]
 1987 028c 0200A0E3 		mov	r0, #2
 1988 0290 10201BE5 		ldr	r2, [fp, #-16]
 1989 0294 1022A0E1 		mov	r2, r0, asl r2
 1990 0298 022081E1 		orr	r2, r1, r2
 1991 029c 002083E5 		str	r2, [r3, #0]
 119:../gpio.c     **** 
 120:../gpio.c     **** 
 121:../gpio.c     **** 			break;
 1992              		.loc 1 121 0
 1993 02a0 0A0000EA 		b	.L29
 1994              	.L27:
 122:../gpio.c     **** 		case EINT: //11
 123:../gpio.c     **** 			//COMPLETAR: Configurar el pin del puerto G
 124:../gpio.c     **** 			//para habilitar la generación de interrupciones externas
 125:../gpio.c     **** 
 126:../gpio.c     **** 			rPCONG |= (0x3 << pos);	// pongo 11
 1995              		.loc 1 126 0
 1996 02a4 38309FE5 		ldr	r3, .L30
 1997 02a8 34209FE5 		ldr	r2, .L30
 1998 02ac 001092E5 		ldr	r1, [r2, #0]
 1999 02b0 0300A0E3 		mov	r0, #3
 2000 02b4 10201BE5 		ldr	r2, [fp, #-16]
 2001 02b8 1022A0E1 		mov	r2, r0, asl r2
 2002 02bc 022081E1 		orr	r2, r1, r2
 2003 02c0 002083E5 		str	r2, [r3, #0]
 127:../gpio.c     **** 
 128:../gpio.c     **** 			break;
 2004              		.loc 1 128 0
 2005 02c4 010000EA 		b	.L29
 2006              	.L23:
 129:../gpio.c     **** 		default:
 130:../gpio.c     **** 			return -1;
 2007              		.loc 1 130 0
 2008 02c8 0030E0E3 		mvn	r3, #0
 2009 02cc 000000EA 		b	.L22
 2010              	.L29:
 131:../gpio.c     **** 	}
 132:../gpio.c     **** 
 133:../gpio.c     **** 	return 0;
 2011              		.loc 1 133 0
 2012 02d0 0030A0E3 		mov	r3, #0
 2013              	.L22:
 134:../gpio.c     **** }
 2014              		.loc 1 134 0
 2015 02d4 0300A0E1 		mov	r0, r3
 2016 02d8 0CD04BE2 		sub	sp, fp, #12
 2017 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2018 02e0 1EFF2FE1 		bx	lr
 2019              	.L31:
 2020              		.align	2
 2021              	.L30:
 2022 02e4 4000D201 		.word	30539840
 2023              		.cfi_endproc
 2024              	.LFE2:
 2026              		.align	2
 2027              		.global	portG_eint_trig
 2029              	portG_eint_trig:
 2030              	.LFB3:
 135:../gpio.c     **** 
 136:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
 137:../gpio.c     **** {
 2031              		.loc 1 137 0
 2032              		.cfi_startproc
 2033              		@ Function supports interworking.
 2034              		@ args = 0, pretend = 0, frame = 16
 2035              		@ frame_needed = 1, uses_anonymous_args = 0
 2036 02e8 0DC0A0E1 		mov	ip, sp
 2037              	.LCFI6:
 2038              		.cfi_def_cfa_register 12
 2039 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2040 02f0 04B04CE2 		sub	fp, ip, #4
 2041              		.cfi_offset 14, -8
 2042              		.cfi_offset 13, -12
 2043              		.cfi_offset 11, -16
 2044              	.LCFI7:
 2045              		.cfi_def_cfa 11, 4
 2046 02f4 10D04DE2 		sub	sp, sp, #16
 2047 02f8 18000BE5 		str	r0, [fp, #-24]
 2048 02fc 0130A0E1 		mov	r3, r1
 2049 0300 19304BE5 		strb	r3, [fp, #-25]
 138:../gpio.c     **** 	//La variable pos indica el primer bit del registro EXTINT del puerto G que corresponde al pin
 139:../gpio.c     **** 	int pos = pin*4;
 2050              		.loc 1 139 0
 2051 0304 18301BE5 		ldr	r3, [fp, #-24]
 2052 0308 0331A0E1 		mov	r3, r3, asl #2
 2053 030c 10300BE5 		str	r3, [fp, #-16]
 140:../gpio.c     **** 
 141:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2054              		.loc 1 141 0
 2055 0310 18301BE5 		ldr	r3, [fp, #-24]
 2056 0314 000053E3 		cmp	r3, #0
 2057 0318 020000BA 		blt	.L33
 2058              		.loc 1 141 0 is_stmt 0 discriminator 1
 2059 031c 18301BE5 		ldr	r3, [fp, #-24]
 2060 0320 070053E3 		cmp	r3, #7
 2061 0324 010000DA 		ble	.L34
 2062              	.L33:
 142:../gpio.c     **** 		return -1;
 2063              		.loc 1 142 0 is_stmt 1
 2064 0328 0030E0E3 		mvn	r3, #0
 2065 032c 430000EA 		b	.L35
 2066              	.L34:
 143:../gpio.c     **** 
 144:../gpio.c     **** 	// pongo todo a 0
 145:../gpio.c     **** 	rEXTINT &= ~(0x7 << pos);
 2067              		.loc 1 145 0
 2068 0330 18319FE5 		ldr	r3, .L44
 2069 0334 14219FE5 		ldr	r2, .L44
 2070 0338 001092E5 		ldr	r1, [r2, #0]
 2071 033c 0700A0E3 		mov	r0, #7
 2072 0340 10201BE5 		ldr	r2, [fp, #-16]
 2073 0344 1022A0E1 		mov	r2, r0, asl r2
 2074 0348 0220E0E1 		mvn	r2, r2
 2075 034c 022001E0 		and	r2, r1, r2
 2076 0350 002083E5 		str	r2, [r3, #0]
 146:../gpio.c     **** 
 147:../gpio.c     **** 	switch (trig) {
 2077              		.loc 1 147 0
 2078 0354 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2079 0358 040053E3 		cmp	r3, #4
 2080 035c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2081 0360 330000EA 		b	.L36
 2082              	.L42:
 2083 0364 78030000 		.word	.L37
 2084 0368 A0030000 		.word	.L38
 2085 036c C8030000 		.word	.L39
 2086 0370 EC030000 		.word	.L40
 2087 0374 10040000 		.word	.L41
 2088              	.L37:
 148:../gpio.c     **** 		case LLOW:	//000
 149:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que genere interrupciones externas por nivel b
 150:../gpio.c     **** 			rEXTINT &= ~(0x7 << pos); // no necesario
 2089              		.loc 1 150 0
 2090 0378 D0309FE5 		ldr	r3, .L44
 2091 037c CC209FE5 		ldr	r2, .L44
 2092 0380 001092E5 		ldr	r1, [r2, #0]
 2093 0384 0700A0E3 		mov	r0, #7
 2094 0388 10201BE5 		ldr	r2, [fp, #-16]
 2095 038c 1022A0E1 		mov	r2, r0, asl r2
 2096 0390 0220E0E1 		mvn	r2, r2
 2097 0394 022001E0 		and	r2, r1, r2
 2098 0398 002083E5 		str	r2, [r3, #0]
 151:../gpio.c     **** 			break;
 2099              		.loc 1 151 0
 2100 039c 260000EA 		b	.L43
 2101              	.L38:
 152:../gpio.c     **** 		case LHIGH:	//001
 153:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que genere interrupciones externas por nivel a
 154:../gpio.c     **** 			rEXTINT |= ~(0x6 << pos);
 2102              		.loc 1 154 0
 2103 03a0 A8309FE5 		ldr	r3, .L44
 2104 03a4 A4209FE5 		ldr	r2, .L44
 2105 03a8 001092E5 		ldr	r1, [r2, #0]
 2106 03ac 0600A0E3 		mov	r0, #6
 2107 03b0 10201BE5 		ldr	r2, [fp, #-16]
 2108 03b4 1022A0E1 		mov	r2, r0, asl r2
 2109 03b8 0220E0E1 		mvn	r2, r2
 2110 03bc 022081E1 		orr	r2, r1, r2
 2111 03c0 002083E5 		str	r2, [r3, #0]
 155:../gpio.c     **** 			break;
 2112              		.loc 1 155 0
 2113 03c4 1C0000EA 		b	.L43
 2114              	.L39:
 156:../gpio.c     **** 		case FALLING:	//01x -> 011(3) o 010(2)
 157:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 158:../gpio.c     **** 			rEXTINT |= (0x2 << pos);
 2115              		.loc 1 158 0
 2116 03c8 80309FE5 		ldr	r3, .L44
 2117 03cc 7C209FE5 		ldr	r2, .L44
 2118 03d0 001092E5 		ldr	r1, [r2, #0]
 2119 03d4 0200A0E3 		mov	r0, #2
 2120 03d8 10201BE5 		ldr	r2, [fp, #-16]
 2121 03dc 1022A0E1 		mov	r2, r0, asl r2
 2122 03e0 022081E1 		orr	r2, r1, r2
 2123 03e4 002083E5 		str	r2, [r3, #0]
 159:../gpio.c     **** 			break;
 2124              		.loc 1 159 0
 2125 03e8 130000EA 		b	.L43
 2126              	.L40:
 160:../gpio.c     **** 		case RISING:	//10x -> 100(4) o 101(5)
 161:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 162:../gpio.c     **** 			rEXTINT |= (0x4 << pos);
 2127              		.loc 1 162 0
 2128 03ec 5C309FE5 		ldr	r3, .L44
 2129 03f0 58209FE5 		ldr	r2, .L44
 2130 03f4 001092E5 		ldr	r1, [r2, #0]
 2131 03f8 0400A0E3 		mov	r0, #4
 2132 03fc 10201BE5 		ldr	r2, [fp, #-16]
 2133 0400 1022A0E1 		mov	r2, r0, asl r2
 2134 0404 022081E1 		orr	r2, r1, r2
 2135 0408 002083E5 		str	r2, [r3, #0]
 163:../gpio.c     **** 			break;
 2136              		.loc 1 163 0
 2137 040c 0A0000EA 		b	.L43
 2138              	.L41:
 164:../gpio.c     **** 		case EDGE:		//11x -> 110(6) o 111(7)
 165:../gpio.c     **** 			// COMPLETAR: configurar el pin del puerto G para que el pin genere interrupciones externas por 
 166:../gpio.c     **** 			rEXTINT |= (0x7 << pos);
 2139              		.loc 1 166 0
 2140 0410 38309FE5 		ldr	r3, .L44
 2141 0414 34209FE5 		ldr	r2, .L44
 2142 0418 001092E5 		ldr	r1, [r2, #0]
 2143 041c 0700A0E3 		mov	r0, #7
 2144 0420 10201BE5 		ldr	r2, [fp, #-16]
 2145 0424 1022A0E1 		mov	r2, r0, asl r2
 2146 0428 022081E1 		orr	r2, r1, r2
 2147 042c 002083E5 		str	r2, [r3, #0]
 167:../gpio.c     **** 			break;
 2148              		.loc 1 167 0
 2149 0430 010000EA 		b	.L43
 2150              	.L36:
 168:../gpio.c     **** 		default:
 169:../gpio.c     **** 			return -1;
 2151              		.loc 1 169 0
 2152 0434 0030E0E3 		mvn	r3, #0
 2153 0438 000000EA 		b	.L35
 2154              	.L43:
 170:../gpio.c     **** 	}
 171:../gpio.c     **** 	return 0;
 2155              		.loc 1 171 0
 2156 043c 0030A0E3 		mov	r3, #0
 2157              	.L35:
 172:../gpio.c     **** }
 2158              		.loc 1 172 0
 2159 0440 0300A0E1 		mov	r0, r3
 2160 0444 0CD04BE2 		sub	sp, fp, #12
 2161 0448 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2162 044c 1EFF2FE1 		bx	lr
 2163              	.L45:
 2164              		.align	2
 2165              	.L44:
 2166 0450 5000D201 		.word	30539856
 2167              		.cfi_endproc
 2168              	.LFE3:
 2170              		.align	2
 2171              		.global	portG_read
 2173              	portG_read:
 2174              	.LFB4:
 173:../gpio.c     **** 
 174:../gpio.c     **** 
 175:../gpio.c     **** int portG_read(int pin, enum digital* val)
 176:../gpio.c     **** {
 2175              		.loc 1 176 0
 2176              		.cfi_startproc
 2177              		@ Function supports interworking.
 2178              		@ args = 0, pretend = 0, frame = 16
 2179              		@ frame_needed = 1, uses_anonymous_args = 0
 2180 0454 0DC0A0E1 		mov	ip, sp
 2181              	.LCFI8:
 2182              		.cfi_def_cfa_register 12
 2183 0458 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2184 045c 04B04CE2 		sub	fp, ip, #4
 2185              		.cfi_offset 14, -8
 2186              		.cfi_offset 13, -12
 2187              		.cfi_offset 11, -16
 2188              	.LCFI9:
 2189              		.cfi_def_cfa 11, 4
 2190 0460 10D04DE2 		sub	sp, sp, #16
 2191 0464 18000BE5 		str	r0, [fp, #-24]
 2192 0468 1C100BE5 		str	r1, [fp, #-28]
 177:../gpio.c     **** 	int pos = pin*2;
 2193              		.loc 1 177 0
 2194 046c 18301BE5 		ldr	r3, [fp, #-24]
 2195 0470 8330A0E1 		mov	r3, r3, asl #1
 2196 0474 10300BE5 		str	r3, [fp, #-16]
 178:../gpio.c     **** 
 179:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2197              		.loc 1 179 0
 2198 0478 18301BE5 		ldr	r3, [fp, #-24]
 2199 047c 000053E3 		cmp	r3, #0
 2200 0480 020000BA 		blt	.L47
 2201              		.loc 1 179 0 is_stmt 0 discriminator 1
 2202 0484 18301BE5 		ldr	r3, [fp, #-24]
 2203 0488 070053E3 		cmp	r3, #7
 2204 048c 010000DA 		ble	.L48
 2205              	.L47:
 180:../gpio.c     **** 		return -1;
 2206              		.loc 1 180 0 is_stmt 1
 2207 0490 0030E0E3 		mvn	r3, #0
 2208 0494 190000EA 		b	.L49
 2209              	.L48:
 181:../gpio.c     **** 
 182:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2210              		.loc 1 182 0
 2211 0498 70309FE5 		ldr	r3, .L53
 2212 049c 002093E5 		ldr	r2, [r3, #0]
 2213 04a0 0310A0E3 		mov	r1, #3
 2214 04a4 10301BE5 		ldr	r3, [fp, #-16]
 2215 04a8 1133A0E1 		mov	r3, r1, asl r3
 2216 04ac 033002E0 		and	r3, r2, r3
 2217 04b0 000053E3 		cmp	r3, #0
 2218 04b4 0100000A 		beq	.L50
 183:../gpio.c     **** 		return -1;
 2219              		.loc 1 183 0
 2220 04b8 0030E0E3 		mvn	r3, #0
 2221 04bc 0F0000EA 		b	.L49
 2222              	.L50:
 184:../gpio.c     **** 	//COMPLETAR la condicion del if: comprobar si el pin del registro de datos del puerto G es un 1)
 185:../gpio.c     **** 
 186:../gpio.c     **** 	if((rPDATG & (0x1 << pin)))	// ¿PIN O POS?
 2223              		.loc 1 186 0
 2224 04c0 4C309FE5 		ldr	r3, .L53+4
 2225 04c4 002093E5 		ldr	r2, [r3, #0]
 2226 04c8 0110A0E3 		mov	r1, #1
 2227 04cc 18301BE5 		ldr	r3, [fp, #-24]
 2228 04d0 1133A0E1 		mov	r3, r1, asl r3
 2229 04d4 033002E0 		and	r3, r2, r3
 2230 04d8 000053E3 		cmp	r3, #0
 2231 04dc 0300000A 		beq	.L51
 187:../gpio.c     **** 		*val=HIGH;	// HIGH = NOPULSADO?
 2232              		.loc 1 187 0
 2233 04e0 1C301BE5 		ldr	r3, [fp, #-28]
 2234 04e4 0120A0E3 		mov	r2, #1
 2235 04e8 0020C3E5 		strb	r2, [r3, #0]
 2236 04ec 020000EA 		b	.L52
 2237              	.L51:
 188:../gpio.c     **** 	else
 189:../gpio.c     **** 		*val=LOW;	// LOW = PULSADO?
 2238              		.loc 1 189 0
 2239 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 2240 04f4 0020A0E3 		mov	r2, #0
 2241 04f8 0020C3E5 		strb	r2, [r3, #0]
 2242              	.L52:
 190:../gpio.c     **** 
 191:../gpio.c     **** 	return 0;
 2243              		.loc 1 191 0
 2244 04fc 0030A0E3 		mov	r3, #0
 2245              	.L49:
 192:../gpio.c     **** }
 2246              		.loc 1 192 0
 2247 0500 0300A0E1 		mov	r0, r3
 2248 0504 0CD04BE2 		sub	sp, fp, #12
 2249 0508 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2250 050c 1EFF2FE1 		bx	lr
 2251              	.L54:
 2252              		.align	2
 2253              	.L53:
 2254 0510 4000D201 		.word	30539840
 2255 0514 4400D201 		.word	30539844
 2256              		.cfi_endproc
 2257              	.LFE4:
 2259              		.align	2
 2260              		.global	portG_conf_pup
 2262              	portG_conf_pup:
 2263              	.LFB5:
 193:../gpio.c     **** 
 194:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 195:../gpio.c     **** {
 2264              		.loc 1 195 0
 2265              		.cfi_startproc
 2266              		@ Function supports interworking.
 2267              		@ args = 0, pretend = 0, frame = 8
 2268              		@ frame_needed = 1, uses_anonymous_args = 0
 2269 0518 0DC0A0E1 		mov	ip, sp
 2270              	.LCFI10:
 2271              		.cfi_def_cfa_register 12
 2272 051c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2273 0520 04B04CE2 		sub	fp, ip, #4
 2274              		.cfi_offset 14, -8
 2275              		.cfi_offset 13, -12
 2276              		.cfi_offset 11, -16
 2277              	.LCFI11:
 2278              		.cfi_def_cfa 11, 4
 2279 0524 08D04DE2 		sub	sp, sp, #8
 2280 0528 10000BE5 		str	r0, [fp, #-16]
 2281 052c 0130A0E1 		mov	r3, r1
 2282 0530 11304BE5 		strb	r3, [fp, #-17]
 196:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2283              		.loc 1 196 0
 2284 0534 10301BE5 		ldr	r3, [fp, #-16]
 2285 0538 000053E3 		cmp	r3, #0
 2286 053c 020000BA 		blt	.L56
 2287              		.loc 1 196 0 is_stmt 0 discriminator 1
 2288 0540 10301BE5 		ldr	r3, [fp, #-16]
 2289 0544 070053E3 		cmp	r3, #7
 2290 0548 010000DA 		ble	.L57
 2291              	.L56:
 197:../gpio.c     **** 		return -1;
 2292              		.loc 1 197 0 is_stmt 1
 2293 054c 0030E0E3 		mvn	r3, #0
 2294 0550 1D0000EA 		b	.L58
 2295              	.L57:
 198:../gpio.c     **** 
 199:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2296              		.loc 1 199 0
 2297 0554 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2298 0558 010053E3 		cmp	r3, #1
 2299 055c 0400000A 		beq	.L59
 2300              		.loc 1 199 0 is_stmt 0 discriminator 1
 2301 0560 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2302 0564 000053E3 		cmp	r3, #0
 2303 0568 0100000A 		beq	.L59
 200:../gpio.c     **** 		return -1;
 2304              		.loc 1 200 0 is_stmt 1
 2305 056c 0030E0E3 		mvn	r3, #0
 2306 0570 150000EA 		b	.L58
 2307              	.L59:
 201:../gpio.c     **** 
 202:../gpio.c     **** 	if (st == ENABLE){
 2308              		.loc 1 202 0
 2309 0574 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2310 0578 010053E3 		cmp	r3, #1
 2311 057c 0900001A 		bne	.L60
 203:../gpio.c     **** 		//COMPLETAR: activar la resistencia de pull-up del pin del puerto G
 204:../gpio.c     **** 		rPUPG &= ~(0x1 << pin);	// pongo PIN a 0
 2312              		.loc 1 204 0
 2313 0580 54309FE5 		ldr	r3, .L62
 2314 0584 50209FE5 		ldr	r2, .L62
 2315 0588 001092E5 		ldr	r1, [r2, #0]
 2316 058c 0100A0E3 		mov	r0, #1
 2317 0590 10201BE5 		ldr	r2, [fp, #-16]
 2318 0594 1022A0E1 		mov	r2, r0, asl r2
 2319 0598 0220E0E1 		mvn	r2, r2
 2320 059c 022001E0 		and	r2, r1, r2
 2321 05a0 002083E5 		str	r2, [r3, #0]
 2322 05a4 070000EA 		b	.L61
 2323              	.L60:
 205:../gpio.c     **** 	}
 206:../gpio.c     **** 	else{
 207:../gpio.c     **** 		//COMPLETAR: desactivar la resistencia de pull-up del pin del puerto G
 208:../gpio.c     **** 		rPUPG |= (0x1 << pin);	// pongo PIN a 1
 2324              		.loc 1 208 0
 2325 05a8 2C309FE5 		ldr	r3, .L62
 2326 05ac 28209FE5 		ldr	r2, .L62
 2327 05b0 001092E5 		ldr	r1, [r2, #0]
 2328 05b4 0100A0E3 		mov	r0, #1
 2329 05b8 10201BE5 		ldr	r2, [fp, #-16]
 2330 05bc 1022A0E1 		mov	r2, r0, asl r2
 2331 05c0 022081E1 		orr	r2, r1, r2
 2332 05c4 002083E5 		str	r2, [r3, #0]
 2333              	.L61:
 209:../gpio.c     **** 	}
 210:../gpio.c     **** 	return 0;
 2334              		.loc 1 210 0
 2335 05c8 0030A0E3 		mov	r3, #0
 2336              	.L58:
 211:../gpio.c     **** }
 2337              		.loc 1 211 0
 2338 05cc 0300A0E1 		mov	r0, r3
 2339 05d0 0CD04BE2 		sub	sp, fp, #12
 2340 05d4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2341 05d8 1EFF2FE1 		bx	lr
 2342              	.L63:
 2343              		.align	2
 2344              	.L62:
 2345 05dc 4800D201 		.word	30539848
 2346              		.cfi_endproc
 2347              	.LFE5:
 2349              		.align	2
 2350              		.global	portG_write
 2352              	portG_write:
 2353              	.LFB6:
 212:../gpio.c     **** 
 213:../gpio.c     **** 
 214:../gpio.c     **** int portG_write(int pin, enum digital val)
 215:../gpio.c     **** {
 2354              		.loc 1 215 0
 2355              		.cfi_startproc
 2356              		@ Function supports interworking.
 2357              		@ args = 0, pretend = 0, frame = 16
 2358              		@ frame_needed = 1, uses_anonymous_args = 0
 2359 05e0 0DC0A0E1 		mov	ip, sp
 2360              	.LCFI12:
 2361              		.cfi_def_cfa_register 12
 2362 05e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2363 05e8 04B04CE2 		sub	fp, ip, #4
 2364              		.cfi_offset 14, -8
 2365              		.cfi_offset 13, -12
 2366              		.cfi_offset 11, -16
 2367              	.LCFI13:
 2368              		.cfi_def_cfa 11, 4
 2369 05ec 10D04DE2 		sub	sp, sp, #16
 2370 05f0 18000BE5 		str	r0, [fp, #-24]
 2371 05f4 0130A0E1 		mov	r3, r1
 2372 05f8 19304BE5 		strb	r3, [fp, #-25]
 216:../gpio.c     **** 	int pos = pin*2;
 2373              		.loc 1 216 0
 2374 05fc 18301BE5 		ldr	r3, [fp, #-24]
 2375 0600 8330A0E1 		mov	r3, r3, asl #1
 2376 0604 10300BE5 		str	r3, [fp, #-16]
 217:../gpio.c     **** 
 218:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2377              		.loc 1 218 0
 2378 0608 18301BE5 		ldr	r3, [fp, #-24]
 2379 060c 000053E3 		cmp	r3, #0
 2380 0610 020000BA 		blt	.L65
 2381              		.loc 1 218 0 is_stmt 0 discriminator 1
 2382 0614 18301BE5 		ldr	r3, [fp, #-24]
 2383 0618 070053E3 		cmp	r3, #7
 2384 061c 010000DA 		ble	.L66
 2385              	.L65:
 219:../gpio.c     **** 		return -1;
 2386              		.loc 1 219 0 is_stmt 1
 2387 0620 0030E0E3 		mvn	r3, #0
 2388 0624 280000EA 		b	.L67
 2389              	.L66:
 220:../gpio.c     **** 
 221:../gpio.c     **** 	if (val < 0 || val > 1)
 2390              		.loc 1 221 0
 2391 0628 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2392 062c 010053E3 		cmp	r3, #1
 2393 0630 0100009A 		bls	.L68
 222:../gpio.c     **** 		return -1;
 2394              		.loc 1 222 0
 2395 0634 0030E0E3 		mvn	r3, #0
 2396 0638 230000EA 		b	.L67
 2397              	.L68:
 223:../gpio.c     **** 
 224:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2398              		.loc 1 224 0
 2399 063c 98309FE5 		ldr	r3, .L72
 2400 0640 002093E5 		ldr	r2, [r3, #0]
 2401 0644 0310A0E3 		mov	r1, #3
 2402 0648 10301BE5 		ldr	r3, [fp, #-16]
 2403 064c 1133A0E1 		mov	r3, r1, asl r3
 2404 0650 032002E0 		and	r2, r2, r3
 2405 0654 0110A0E3 		mov	r1, #1
 2406 0658 10301BE5 		ldr	r3, [fp, #-16]
 2407 065c 1133A0E1 		mov	r3, r1, asl r3
 2408 0660 030052E1 		cmp	r2, r3
 2409 0664 0100000A 		beq	.L69
 225:../gpio.c     **** 		return -1;
 2410              		.loc 1 225 0
 2411 0668 0030E0E3 		mvn	r3, #0
 2412 066c 160000EA 		b	.L67
 2413              	.L69:
 226:../gpio.c     **** 
 227:../gpio.c     **** 	if (val)
 2414              		.loc 1 227 0
 2415 0670 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2416 0674 000053E3 		cmp	r3, #0
 2417 0678 0900000A 		beq	.L70
 228:../gpio.c     **** 		rPDATG|= ~(0x1<<pin);
 2418              		.loc 1 228 0
 2419 067c 5C309FE5 		ldr	r3, .L72+4
 2420 0680 58209FE5 		ldr	r2, .L72+4
 2421 0684 001092E5 		ldr	r1, [r2, #0]
 2422 0688 0100A0E3 		mov	r0, #1
 2423 068c 18201BE5 		ldr	r2, [fp, #-24]
 2424 0690 1022A0E1 		mov	r2, r0, asl r2
 2425 0694 0220E0E1 		mvn	r2, r2
 2426 0698 022081E1 		orr	r2, r1, r2
 2427 069c 002083E5 		str	r2, [r3, #0]
 2428 06a0 080000EA 		b	.L71
 2429              	.L70:
 229:../gpio.c     **** 	else
 230:../gpio.c     **** 		rPDATG &= ~(0x1<<pin);
 2430              		.loc 1 230 0
 2431 06a4 34309FE5 		ldr	r3, .L72+4
 2432 06a8 30209FE5 		ldr	r2, .L72+4
 2433 06ac 001092E5 		ldr	r1, [r2, #0]
 2434 06b0 0100A0E3 		mov	r0, #1
 2435 06b4 18201BE5 		ldr	r2, [fp, #-24]
 2436 06b8 1022A0E1 		mov	r2, r0, asl r2
 2437 06bc 0220E0E1 		mvn	r2, r2
 2438 06c0 022001E0 		and	r2, r1, r2
 2439 06c4 002083E5 		str	r2, [r3, #0]
 2440              	.L71:
 231:../gpio.c     **** 
 232:../gpio.c     **** 	return 0;
 2441              		.loc 1 232 0
 2442 06c8 0030A0E3 		mov	r3, #0
 2443              	.L67:
 233:../gpio.c     **** }
 2444              		.loc 1 233 0
 2445 06cc 0300A0E1 		mov	r0, r3
 2446 06d0 0CD04BE2 		sub	sp, fp, #12
 2447 06d4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2448 06d8 1EFF2FE1 		bx	lr
 2449              	.L73:
 2450              		.align	2
 2451              	.L72:
 2452 06dc 4000D201 		.word	30539840
 2453 06e0 4400D201 		.word	30539844
 2454              		.cfi_endproc
 2455              	.LFE6:
 2457              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1710   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1713   .text:00000000 portB_conf
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1796   .text:000000c4 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1800   .text:000000c8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1803   .text:000000c8 portB_write
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1882   .text:00000180 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1886   .text:00000184 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1889   .text:00000184 portG_conf
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1933   .text:000001dc $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:1939   .text:000001ec $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2022   .text:000002e4 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2026   .text:000002e8 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2029   .text:000002e8 portG_eint_trig
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2083   .text:00000364 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2090   .text:00000378 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2166   .text:00000450 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2170   .text:00000454 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2173   .text:00000454 portG_read
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2254   .text:00000510 $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2259   .text:00000518 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2262   .text:00000518 portG_conf_pup
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2345   .text:000005dc $d
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2349   .text:000005e0 $a
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2352   .text:000005e0 portG_write
C:\Users\USUARI~1\AppData\Local\Temp\ccFvQ7Pj.s:2452   .text:000006dc $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
